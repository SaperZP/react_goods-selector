{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","reset","setState","clickHandler","good","selectedGood","includes","filter","choosenGod","this","className","length","join","type","onClick","map","classNames","find","goods","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAyB,CACvBC,cAAe,CAAC,Q,EAGlBC,MAAQ,WACN,EAAKC,SAAS,CAAEF,cAAe,M,EAGjCG,aAAe,SAACC,GACd,IAAuBC,EAAiB,EAAKN,MAArCC,cAER,EAAKE,SAAS,CACZF,cAAeK,EAAaC,SAASF,GACjCC,EAAaE,QAAO,SAAAC,GAAU,OAAIA,IAAeJ,KADtC,sBAEPC,GAFO,CAEOD,O,4CAI1B,WAAU,IAAD,OACgBC,EAAiBI,KAAKV,MAArCC,cAER,OACE,sBAAKU,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGL,EAAaM,OAAb,UACMN,EAAaO,KAAK,MADxB,gBAEG,sBAGN,wBACEC,KAAK,SACLH,UAAU,qBACVI,QAASL,KAAKR,MAHhB,mBAQA,oBAAIS,UAAU,QAAd,SACGb,EAAgBkB,KAAI,SAAAX,GAAI,OACvB,qBAEEM,UAAWM,IACT,cACA,CACE,wBAAyBX,EACtBY,MAAK,SAAAC,GAAK,OAAIA,IAAUd,OANjC,UAUE,4BAAIA,IAEJ,wBACES,KAAK,SACLH,UAAWM,IACT,gBACA,CAAE,yBAAyB,IAE7BF,QAAS,kBAAM,EAAKX,aAAaC,IANnC,SAQGC,EAAaY,MAAK,SAAAC,GAAK,OAAIA,IAAUd,KAClC,SACA,aArBDA,e,GAzCDe,IAAMC,WAwETtB,IC1FfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b298b59d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGoods: ['Jam'],\n  };\n\n  reset = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  clickHandler = (good: string) => {\n    const { selectedGoods: selectedGood } = this.state;\n\n    this.setState({\n      selectedGoods: selectedGood.includes(good)\n        ? selectedGood.filter(choosenGod => choosenGod !== good)\n        : [...selectedGood, good],\n    });\n  };\n\n  render() {\n    const { selectedGoods: selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {selectedGood.length\n            ? `${selectedGood.join(', ')} is selected`\n            : 'No goods selected'}\n        </h1>\n\n        <button\n          type=\"button\"\n          className=\"App__button button\"\n          onClick={this.reset}\n        >\n          Clear\n        </button>\n\n        <ul className=\"goods\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames(\n                'goods__good',\n                {\n                  'goods__good--selected': selectedGood\n                    .find(goods => goods === good),\n                },\n              )}\n            >\n              <p>{good}</p>\n\n              <button\n                type=\"button\"\n                className={classNames(\n                  'goods__button',\n                  { 'goods__button--select': true },\n                )}\n                onClick={() => this.clickHandler(good)}\n              >\n                {selectedGood.find(goods => goods === good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}